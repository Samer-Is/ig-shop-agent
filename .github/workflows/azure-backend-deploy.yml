name: Deploy Backend to Azure Web App

on:
  push:
    branches:
      - main
    paths:
      - 'backend/**'
      - '.github/workflows/**'
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        cd backend
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Test production Flask app
      run: |
        cd backend
        python -c "
        import os
        os.environ['META_APP_ID'] = 'test'
        os.environ['JWT_SECRET_KEY'] = 'test'
        os.environ['OPENAI_API_KEY'] = 'test'
        from production_app import app
        print('‚úÖ Production Flask app imports successfully')
        print(f'‚úÖ Routes: {len(list(app.url_map.iter_rules()))} routes configured')
        "
    
    - name: Log in to Azure CLI
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
        
    - name: Configure Azure Web App for Python Flask
      run: |
        echo "üîß Configuring Azure Web App for Python Flask backend..."
        
        # CRITICAL: Set runtime to Python 3.11 (not Node.js)
        az webapp config set \
          --resource-group igshop-dev-rg-v2 \
          --name igshop-dev-yjhtoi-api \
          --linux-fx-version "PYTHON|3.11"
        
        # CRITICAL: Set startup command for production_app.py
        az webapp config set \
          --resource-group igshop-dev-rg-v2 \
          --name igshop-dev-yjhtoi-api \
          --startup-file "gunicorn --bind=0.0.0.0 --timeout 600 production_app:app"
        
        # Set ALL environment variables with LIVE credentials
        az webapp config appsettings set \
          --resource-group igshop-dev-rg-v2 \
          --name igshop-dev-yjhtoi-api \
          --settings \
            META_APP_ID="1879578119651644" \
            META_APP_SECRET="f79b3350f43751d6139e1b29a232cbf3" \
            OPENAI_API_KEY="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" \
            JWT_SECRET_KEY="production-jwt-secret-2024" \
            META_REDIRECT_URI="https://igshop-dev-yjhtoi-api.azurewebsites.net/auth/instagram/callback" \
            FLASK_APP="production_app.py" \
            FLASK_ENV="production" \
            SCM_DO_BUILD_DURING_DEPLOYMENT="true" \
            ENABLE_ORYX_BUILD="true"
        
        # Verify configuration was applied
        echo "‚úÖ Configuration applied:"
        az webapp config show \
          --resource-group igshop-dev-rg-v2 \
          --name igshop-dev-yjhtoi-api \
          --query "{linuxFxVersion: linuxFxVersion, appCommandLine: appCommandLine}"
        
    - name: Create clean deployment package
      run: |
        cd backend
        
        # Remove any build artifacts and cache
        rm -rf __pycache__ .pytest_cache *.pyc
        find . -type d -name __pycache__ -exec rm -rf {} + 2>/dev/null || true
        
        # Remove test files
        rm -f test_*.py
        
        # Ensure only production files
        echo "‚úÖ Files to deploy:"
        ls -la
        
        echo "‚úÖ Contents of production_app.py:"
        head -10 production_app.py
        
    - name: Deploy to Azure Web App
      uses: azure/webapps-deploy@v2
      with:
        app-name: 'igshop-dev-yjhtoi-api'
        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
        package: './backend'

    - name: Post-deployment configuration
      run: |
        # Force restart to apply all settings
        echo "üîÑ Forcing restart to apply all configuration..."
        az webapp restart \
          --resource-group igshop-dev-rg-v2 \
          --name igshop-dev-yjhtoi-api
        
        # Wait for restart
        echo "‚è≥ Waiting 30 seconds for restart..."
        sleep 30

    - name: Verify deployment
      run: |
        echo "üîç Testing deployment..."
        echo "Backend URL: https://igshop-dev-yjhtoi-api.azurewebsites.net"
        
        # Test root endpoint
        echo "Testing root endpoint..."
        curl -f https://igshop-dev-yjhtoi-api.azurewebsites.net/ || echo "Root endpoint failed"
        
        # Test health endpoint  
        echo "Testing health endpoint..."
        curl -f https://igshop-dev-yjhtoi-api.azurewebsites.net/health || echo "Health endpoint failed"
        
        echo "‚úÖ Deployment completed!"
        echo "üåê Frontend: https://red-island-0b863450f.2.azurestaticapps.net"
        echo "üîó Backend: https://igshop-dev-yjhtoi-api.azurewebsites.net" 