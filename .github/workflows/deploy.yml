name: Deploy IG-Shop-Agent

on:
  push:
    branches: [main, production-deployment, emergency-fix-deployment]
  workflow_dispatch:

jobs:
  deploy-backend:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Verify backend structure
      run: |
        echo "Current directory structure:"
        ls -la
        echo "Backend directory contents:"
        ls -la backend/
        echo "Files to be deployed:"
        find . -name "*.py" -type f | head -20
    
    - name: Login to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    
    - name: Deploy Backend to Azure Web App
      uses: azure/webapps-deploy@v2
      with:
        app-name: 'igshop-api'
        package: '.'
    
    - name: Configure Web App Settings
      run: |
        az webapp config set \
          --resource-group igshop-dev-rg-v2 \
          --name igshop-api \
          --linux-fx-version "PYTHON|3.12"
        
        az webapp config appsettings set \
          --resource-group igshop-dev-rg-v2 \
          --name igshop-api \
          --settings \
            ENVIRONMENT=production \
            FRONTEND_URL=https://proud-rock-0d57f940f.2.azurestaticapps.net \
            SCM_DO_BUILD_DURING_DEPLOYMENT=true \
            ENABLE_ORYX_BUILD=true \
            PYTHONPATH=/home/site/wwwroot \
            DATABASE_HOST=igshop-postgres.postgres.database.azure.com \
            DATABASE_USER=igshop \
            DATABASE_PASSWORD=IgShop2024! \
            DATABASE_NAME=igshop_db \
            DATABASE_PORT=5432 \
            META_APP_ID="${{ secrets.META_APP_ID }}" \
            META_APP_SECRET="${{ secrets.META_APP_SECRET }}" \
            META_REDIRECT_URI=https://proud-rock-0d57f940f.2.azurestaticapps.net/login \
            META_WEBHOOK_VERIFY_TOKEN=igshop_webhook_verify_token_2024 \
            OPENAI_API_KEY="${{ secrets.OPENAI_API_KEY }}" \
            OPENAI_MODEL=gpt-4o \
            AZURE_SPEECH_KEY="${{ secrets.AZURE_SPEECH_KEY }}" \
            AZURE_SPEECH_REGION=eastus

  # Frontend deployment is handled by azure-static-web-apps-proud-rock-0d57f940f.yml
  # deploy-frontend:
  #   runs-on: ubuntu-latest
  #   steps:
  #   - name: Checkout code
  #     uses: actions/checkout@v4
    #
    # - name: Setup Node.js
    #   uses: actions/setup-node@v4
    #   with:
    #     node-version: '18'
    # 
    # - name: Install dependencies and build
    #   run: |
    #     cd ig-shop-agent-dashboard
    #     echo "üîç DEBUG: Starting frontend build process"
    #     echo "üîç DEBUG: Current directory: $(pwd)"
    #     echo "üîç DEBUG: Node version: $(node --version)"
    #     echo "üîç DEBUG: NPM version: $(npm --version)"
    #     
    #     # Install dependencies with npm
    #     echo "üîç DEBUG: Installing dependencies..."
    #     npm install
    #     
    #     # Debug environment before creating .env
    #     echo "üîç DEBUG: Environment variables before .env creation:"
    #     printenv | grep -E "(VITE_|NODE_|npm_)" || echo "No VITE_ variables found"
    #     
    #     # Create .env file with production values
    #     echo "üîç DEBUG: Creating .env file..."
    #     echo "VITE_API_BASE_URL=https://igshop-api.azurewebsites.net" > .env
    #     echo "VITE_ENVIRONMENT=production" >> .env
    #     echo "üîç DEBUG: .env file contents:"
    #     cat .env
    #     
    #     # Debug environment after creating .env
    #     echo "üîç DEBUG: Environment variables after .env creation:"
    #     printenv | grep -E "(VITE_|NODE_|npm_)" || echo "No VITE_ variables found"
    #     
    #     # Build with environment variables
    #     echo "üîç DEBUG: Starting build process..."
    #     npm run build
    #     
    #     echo "üîç DEBUG: Build completed successfully"
    #     echo "üîç DEBUG: Checking built files:"
    #     ls -la dist/
    #     
    #     # Check if built files contain the correct API URL
    #     echo "üîç DEBUG: Searching for API URLs in built files..."
    #     grep -r "igshop-dev-yjhtoi-api" dist/ || echo "‚úÖ No old API URL found"
    #     grep -r "igshop-api.azurewebsites.net" dist/ || echo "‚ùå New API URL not found"
    #     
    #     # Check the main JS file for API URLs
    #     echo "üîç DEBUG: Checking main JS files for API URLs..."
    #     find dist/ -name "*.js" -exec grep -l "igshop" {} \; | head -5 | while read file; do
    #       echo "üîç DEBUG: Found API references in $file:"
    #       grep -o "https://[^\"']*igshop[^\"']*" "$file" || echo "No igshop URLs found"
    #     done
    #     
    #     # Force cache busting by adding timestamp
    #     echo "üîç DEBUG: Adding cache busting timestamp..."
    #     echo "BUILD_TIME=$(date +%s)" >> .env
    #     cat .env
    #     
    #     # Copy staticwebapp.config.json to dist folder
    #     cp public/staticwebapp.config.json dist/
    #     echo "üîç DEBUG: Configuration file copied to dist folder"
    #     echo "üîç DEBUG: Final dist directory contents:"
    #     ls -la dist/
    # 
    # - name: Deploy to Azure Static Web Apps (ULTIMATE EMERGENCY FIX)
    #   uses: Azure/static-web-apps-deploy@v1
    #   with:
    #     azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }}
    #     repo_token: ${{ secrets.GITHUB_TOKEN }}
    #     action: "upload"
    #     app_location: "ig-shop-agent-dashboard"
    #     api_location: ""
    #     output_location: "dist"
    #     skip_app_build: false
    #     production_branch: "emergency-fix-deployment"
    #   env:
    #     VITE_API_BASE_URL: https://igshop-api.azurewebsites.net
    #     VITE_ENVIRONMENT: production
    #     # Force complete cache invalidation
    #     VITE_FORCE_REFRESH: ${{ github.run_number }}
    #     VITE_BUILD_TIME: ${{ github.run_id }} 